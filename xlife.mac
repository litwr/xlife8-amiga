t9 equ '    '
vermax   = 24     ;192
hormax   = 31     ;248
total    = hormax*vermax+1
tilesize = 82
plainbox = hormax*vermax*tilesize+tiles
nextline = 32
startpl1 = $20000
startpl2 = startpl1+nextline*256

left     = 8      ;all directions
ul       = 12     ;not zero!
up       = 16
ur       = 20
right    = 24
dr       = 28
down     = 32
dl       = 36
next     = 40
count0   = 44
count1   = 48
count2   = 52
count3   = 56
count4   = 60
count5   = 64
count6   = 68
count7   = 72
video    = 76
sum      = 80

tile     macro
l0       dc.b 0
l1       dc.b 0
l2       dc.b 0
l3       dc.b 0
l4       dc.b 0
l5       dc.b 0
l6       dc.b 0
l7       dc.b 0
left     dc.l 0	;+8
ul       dc.l 0
up       dc.l 0        ;+16
ur       dc.l 0
right    dc.l 0        ;+24
dr       dc.l 0
down     dc.l 0        ;+32
dl       dc.l 0
next     dc.l 0        ;+40
         blk.b 32       ;+26, count0
video    dc.l 0        ;+76
sum      dc.b 0        ;+80
         dc.b 0        ;free
endm

;boxsz_xmin = i1
;boxsz_ymin = i1+1
;boxsz_curx = x0          ;boxsz_sizex
;boxsz_cury = y0          ;boxsz_sizey
;xcut       = temp2
;ycut       = temp2+1
;x8poscp    = temp
;y8poscp    = temp+1
;y8byte     = saved

   if 0
red equ 27,'[31m'
green equ 27,'[32m'       ;purple in graph
gpurple equ green
blue equ 27,'[34m'        ;cyan in graph
gcyan equ blue
purple equ 27,'[35m'
cyan equ 27,'[36m'
black equ 27,'[37m'       ;white in graph
gwhite equ black
bold equ 27,'[1m'
normal equ 27,'[0m'
ansiclrscn equ 27,'[2J'
home equ 27,'[H'
clrtoeol equ '                                       ',0dh
   endif

	if 0
macro vidmacp one,two {
          mov cx,[si+one]
          and cx,0001100011000000b
          shl ch,1
          or ch,cl
          mov cl,4
          mov ah,al
          shr al,cl
          or al,ch
          mov bx,vistabpc
          xlatb
          mov [es:di+two],al
          mov dx,[si+one+2]
          and dx,0000001100011000b
          shr dl,1
          or dh,dl
          shl dh,cl
          and ah,0fh
          or ah,dh
          mov al,ah
          xlatb
          mov [es:di+two+1],al
}
	endif
genmac macro
	 moveq #0,d1			;;xor bx,bx
	 move.b (count\1+3,a4),d1	;;mov bl,[si+count#one+3]
	 move.b (a2,d1),d0		;;mov al,[bx+gentab]
         andi.w #3,d0			;;and ax,3

         move.b (count\1+2,a4),d1	;;mov bl,[si+count#one+2]
	 move.b (a2,d1),d1		;;mov bl,[bx+gentab]
	 andi.b #$c,d1			;;and bl,0ch

	 or.b d1,d0			;;or al,bl
         move.b (count\1+1,a4),d1	;;mov bl,[si+count#one+1]
	 move.b (a2,d1),d1		;;mov bl,[bx+gentab]
	 andi.b #$30,d1			;;and bl,30h
	 or.b d1,d0			;;or al,bl

         move.b (count\1,a4),d1		;;mov bl,[si+count#one]
         move.b (a2,d1),d1		;;mov bl,[bx+gentab]		;;movb gentab(r5),r5
         andi.b #$c,d1			;;and bl,0c0h			;;bic #^B1111111100111111,r5
	 or.b d1,d0			;;or al,bl			;;bis r5,r1

         move.b d0,(\1,a4)		;;mov [si+one],al		;;movb r1,one(r0)
         				;;mov bx,tab3
         move.b (a0,d0),d0		;;xlatb				;;movb tab3(r1),r2
         beq .\@			;;or al,al
					;;jz @f

         move.b d0,(sum,a4)		;;mov [si+sum],al		;;movb r2,sum(r0)
         cmpi.b #2,mode(a3)		;;cmp [mode],2			;;cmpb #2,@#mode
         beq .\@			;;jz @f

;         cellsum .\@			;;cellsum @f
.\@:					;;@@:
endm

cellsum macro  ;in: d0		;;macro cellsum l1 {  ;in: al
	 lea.l cellcnt+4(a3),a1		;;mov bx,cellcnt+4
	 move.b (a1),d1
         move #0,CCR
	 abcd d0,d1			;;add al,[bx]
	 ;move sr,d2			;;aaa
	 move.b d1,(a1)+		;;mov [bx],al
	 moveq #0,d0
	 ;move d2,ccr
	 bcc \1				;;jnc l1

         incbcd \1			;;incbcd l1
         incbcd \1			;;incbcd l1
         incbcd \1			;;incbcd l1
         incbcd \1			;;incbcd l1
\1:				;;l1:
endm

incbcd macro				;;macro incbcd l1 {
	 				;;dec bx
	 move.b -(a1),d1		;;mov al,[bx]
	 abcd d0,d1			;;adc al,0
					;;aaa
	 move.b d1,(a1)        		;;mov [bx],al
	 bcc \1				;;jnc l1
endm

	if 0
inibcd macro			;;macro inibcd one,two {
	 move.				;;mov bx,two
        dec bx			;;@@:     mov byte [bx+one],bh
        jns @b
endm
	endif
setcount macro
         move.w (\1,a4),d1		;;mov bx,[si+one]
	 move.w d1,d5			;;mov di,bx
	 and.w d2,d1			;;and bx,cx
	 move.b d1,(count\1,a4)		;;mov [si+count#one],bl
         lsr.w #8,d1
         move.b d1,(count\1+4,a4)	;;mov [si+count#one+4],bh
	 move.w d5,d1			;;mov bx,di
	 and.w d3,d1			;;and bx,dx
         lsr.w #1,d1			;;shr bx,1
	 move.b d1,(count\1+1,a4)	;;mov [si+count#one+1],bl
         lsr.w #8,d1
         move.b d1,(count\1+5,a4)	;;mov [si+count#one+5],bh
	 move.w d5,d1			;;mov bx,di
	 and.w d6,d1			;;and bx,bp
         lsl.w #1,d1			;;shl bx,1
	 move.b d1,(count\1+2,a4)	;;mov [si+count#one+2],bl
         lsr.w #8,d1
         move.b d1,(count\1+6,a4)	;;mov [si+count#one+6],bh
	 move.w d5,d1			;;mov bx,di
	 and.w d0,d1			;;and bx,ax
	 move.b d1,(count\1+2,a4)	;;mov [si+count#one+3],bl
         lsr.w #8,d1
         move.b d1,(count\1+7,a4)	;;mov [si+count#one+7],bh
endm

